Init: 
    # call main
    ECALL main

exit:         
    ESET    SRAX    0x1
    ESET    SRBX    0x0
    syscall

print_nl:    
    ESET    SRCX    SRSP
    EPUSH   0x0A

    ESET    RAX     0x4
    ESET    RBX     0x1
    ESET    RDX     0x1
    SYSCALL

    # ret
    POP VAL
    SWAP
    J   

print_fizz:    
    ESET    SRCX    SRSP
    EPUSH   "fizz" 

    ESET    RAX     0x4
    ESET    RBX     0x1
    ESET    RDX     0x4
    SYSCALL

    # ret
    POP VAL
    SWAP
    J   

print_buzz:     # print_buzz 
    ESET    SRCX    SRSP
    EPUSH   "buzz" 

    ESET    RAX     0x4
    ESET    RBX     0x1
    ESET    RDX     0x4
    SYSCALL

    # ret
    POP VAL
    SWAP
    J   

main:           # main  %.LFB4  # mov $0, %rax
    ESET    SRAX    0x0
    EJMP   .L7

.L11:
    ESET    SRBX    SRAX
    EGET    SRBX
    CLR 
    UVAL 0x3
    DDIV
    DMUL
    CJE     .L8     SRBX    SRAX

    ECALL   print_fizz

.L8:
    ESET    SRBX    SRAX
    EGET    SRBX
    CLR 
    UVAL 0x5
    DDIV
    DMUL
    CJE     .L9     SRBX    SRAX

    ECALL print_buzz

.L9:
    ESET    SRBX    SRAX
    EGET    SRBX
    CLR 
    UVAL    0x3
    DDIV
    DMUL
    CJNE    .L10    SRBX    SRAX

    ESET    SRBX    SRAX
    EGET    SRBX
    CLR 
    UVAL    0x5
    DDIV
    DMUL
    CJNE    .L10     SRBX   SRAX

    ECALL print_nl

.L10:
    # add $1, %rax 
    EGET    SRAX    # puts SRAX in VAL and &SRAX in PTR
    CLR
    UVAL    0x1 
    DADD

.L7:
    CJLE    .L11    SRAX    100
    
    ECALL exit
